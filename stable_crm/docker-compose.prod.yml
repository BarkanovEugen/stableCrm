version: '3.8'

services:
  app:
    build: .
    container_name: stable_crm_app
    environment:
      - MIX_ENV=prod
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/stable_crm_prod
      - SECRET_KEY_BASE=${SECRET_KEY_BASE}
      - VK_ID_CLIENT_ID=${VK_ID_CLIENT_ID}
      - VK_ID_CLIENT_SECRET=${VK_ID_CLIENT_SECRET}
      - VK_ID_REDIRECT_URI=${VK_ID_REDIRECT_URI}
      - PHX_HOST=${PHX_HOST}
      - PORT=4000
    ports:
      - "4000:4000"
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    networks:
      - stable_crm_network

  postgres:
    image: postgres:15
    container_name: stable_crm_postgres_prod
    environment:
      POSTGRES_DB: stable_crm_prod
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - stable_crm_network

  redis:
    image: redis:7-alpine
    container_name: stable_crm_redis_prod
    volumes:
      - redis_data_prod:/data
    restart: unless-stopped
    networks:
      - stable_crm_network

  nginx:
    image: nginx:alpine
    container_name: stable_crm_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - stable_crm_network

volumes:
  postgres_data_prod:
  redis_data_prod:

networks:
  stable_crm_network:
    driver: bridge
